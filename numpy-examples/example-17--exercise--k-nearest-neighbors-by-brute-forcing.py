import numpy as np
import matplotlib.pyplot as plt

rng = np.random.default_rng(seed=42)
X = rng.random((10, 2))
plt.scatter(X[:, 0], X[:, 1], s=100)
plt.savefig('../numpy-examples-figures/k-nearest-neighbors-by-brute-forcing-1.svg')
plt.close()

# Compute the distance between each pair of points
dist_L2 = np.sum((X[:, np.newaxis] - X[np.newaxis, :]) ** 2, axis=-1)
# array([[0.        , 0.07398111, 0.75019311, 0.12070228, 0.41724485,
#         0.40056968, 0.16428994, 0.15404928, 0.18879464, 0.04004745],
#        [0.07398111, 0.        , 0.66176428, 0.01736513, 0.59460745,
#         0.2905717 , 0.06183373, 0.39339909, 0.49381057, 0.00527591],
#        [0.75019311, 0.66176428, 0.        , 0.48077103, 0.27702496,
#         0.07890604, 0.32552305, 0.68204444, 1.04336354, 0.65626159],
#        [0.12070228, 0.01736513, 0.48077103, 0.        , 0.51340197,
#         0.17216331, 0.01510002, 0.41323553, 0.56430573, 0.02826045],
#        [0.41724485, 0.59460745, 0.27702496, 0.51340197, 0.        ,
#         0.28583271, 0.40466324, 0.14920913, 0.33131299, 0.52218667],
#        [0.40056968, 0.2905717 , 0.07890604, 0.17216331, 0.28583271,
#         0.        , 0.08538234, 0.49461011, 0.77845636, 0.29578088],
#        [0.16428994, 0.06183373, 0.32552305, 0.01510002, 0.40466324,
#         0.08538234, 0.        , 0.39482809, 0.58396752, 0.07028811],
#        [0.15404928, 0.39339909, 0.68204444, 0.41323553, 0.14920913,
#         0.49461011, 0.39482809, 0.        , 0.03906548, 0.31118281],
#        [0.18879464, 0.49381057, 1.04336354, 0.56430573, 0.33131299,
#         0.77845636, 0.58396752, 0.03906548, 0.        , 0.39700471],
#        [0.04004745, 0.00527591, 0.65626159, 0.02826045, 0.52218667,
#         0.29578088, 0.07028811, 0.31118281, 0.39700471, 0.        ]])

# quick check
dist_L2.diagonal()
# array([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.])

# Sort along each row
nearest = np.argsort(dist_L2, axis=1)
# array([[0, 9, 1, 3, 7, 6, 8, 5, 4, 2],
#        [1, 9, 3, 6, 0, 5, 7, 8, 4, 2],
#        [2, 5, 4, 6, 3, 9, 1, 7, 0, 8],
#        [3, 6, 1, 9, 0, 5, 7, 2, 4, 8],
#        [4, 7, 2, 5, 8, 6, 0, 3, 9, 1],
#        [5, 2, 6, 3, 4, 1, 9, 0, 7, 8],
#        [6, 3, 1, 9, 5, 0, 2, 7, 4, 8],
#        [7, 8, 4, 0, 9, 1, 6, 3, 5, 2],
#        [8, 7, 0, 4, 9, 1, 3, 6, 5, 2],
#        [9, 1, 3, 0, 6, 5, 7, 8, 4, 2]])

# The second column gives the indices of the nearest neighbors

K = 2
nearest_partition = np.argpartition(dist_L2, K+1, axis=1)

plt.scatter(X[:, 0], X[:, 1], s=100)
# Draw lines from each point to its two nearest neighbors
K = 2
for i in range(X.shape[0]):
    for j in nearest_partition[i, :K+1]:
        # Plot a line from X[i] to X[j].
        plt.plot(*zip(X[j], X[i]), color='black')
plt.savefig('../numpy-examples-figures/k-nearest-neighbors-by-brute-forcing-2.svg')
plt.close()
